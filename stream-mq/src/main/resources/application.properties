server.port=8880

# 下面仅仅是常用的 基本配置  如果  有需要还可以 自行增加配置
############################################# stage.1 ##############################################

#指定三个连接 分别是  rabbitMQ  kafka  rocketMQ
#自定义连接名 分别为  myrabbitmq  mykafka   myrocketmq
#并设置myRabbitMq为默认连接

# 1.首先配置 rabbitMQ 的自定义连接 myrabbitmq

spring.cloud.stream.binders.myrabbitmq.type=rabbit
spring.cloud.stream.binders.myrabbitmq.environment.spring.rabbitmq.host=127.0.0.1
spring.cloud.stream.binders.myrabbitmq.environment.spring.rabbitmq.prot=5672
spring.cloud.stream.binders.myrabbitmq.environment.spring.rabbitmq.username=guest
spring.cloud.stream.binders.myrabbitmq.environment.spring.rabbitmq.password=guest
spring.cloud.stream.binders.myrabbitmq.environment.spring.rabbitmq.virtual-host=/

#4.然后设置 myrabbitmq  为  默认的  mq，如果下面的生产者和消费者 找不到mq就为绑定它
spring.cloud.stream.default-binder=myrabbitmq

########################################### stage.2 ################################################
# 上述已经绑定完毕  MQ  下面将 为每个MQ指定 生产者和消费者  并绑定消息通道
# myrocketmq 使用的是  自定义  的生产者    myrocketmq_output 和消费者   myrocketmq_input 使用的消息通道是  myrocketmqexchange
# myrabbitmq 使用的是  自定义  的生产者    myrabbitmq_output 和消费者   myrabbitmq_input 使用的消息通道是  myrabbitmqexchange
# mykafka    使用的是  默认   的生产者    output             和消费者   input            使用的消息通道是  mykafkaexchange

# 1. 首先为  myrabbitmq 的 生产者 和消费者 声明消息通道 myrabbitmqexchange ，并且绑定 myrabbitmq
spring.cloud.stream.bindings.myrabbitmq_output.binder=myrabbitmq
spring.cloud.stream.bindings.myrabbitmq_output.destination=myrabbitmqexchange
spring.cloud.stream.bindings.myrabbitmq_input.binder=myrabbitmq
spring.cloud.stream.bindings.myrabbitmq_input.destination=myrabbitmqexchange

#2. 然后为  myrocketmq 的生产者 和 消费者 声明消息通道  myrocketmqexchange ，并且绑定 myrocketmq
spring.cloud.stream.bindings.myrocketmq_output.binder=myrocketmq
spring.cloud.stream.bindings.myrocketmq_output.destination=myrocketmqexchange
spring.cloud.stream.bindings.myrocketmq_input.binder=myrocketmq
spring.cloud.stream.bindings.myrocketmq_input.destination=myrocketmqexchange
spring.cloud.stream.bindings.myrocketmq_input.group=binder-group




#3. 然后为  mykafka 的生产者 和 消费者 声明消息通道  mykafkaexchange ，并且绑定 mykafka
spring.cloud.stream.bindings.output.binder=mykafka
spring.cloud.stream.bindings.output.destination=mykafkaexchange
spring.cloud.stream.bindings.input.binder=mykafka
spring.cloud.stream.bindings.input.destination=mykafkaexchange
########################################### stage.3 ################################################
# 这里可以配置  发送消息的  消息格式   等

########################################### stage.4 ################################################
# 然后配置一些  每种mq特有的属性
# 比如
# 设置 rabbitMQ 的  生产者和消费者 的交换机 类型为 topic 类型
spring.cloud.stream.rabbit.bindings.myrabbitmq_input.consumer.exchange-type=topic
# 设置Kafka  消费者自动提交  设置ack 机制为-1
spring.cloud.stream.kafka.bindings.mykafka_input.consumer.auto-commit-offset=true
spring.cloud.stream.kafka.binder.required-acks=-1
