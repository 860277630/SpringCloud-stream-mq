server.port=8080
# 配置  两个生产者 四个消费者  两个消费者组  共用两个交换机 mykafkaexchange
#首先配置自定义连接
spring.cloud.stream.binders.mykafka.type=kafka
spring.cloud.stream.binders.mykafka.environment.spring.cloud.stream.kafka.binder.brokers=192.168.227.203:9092
spring.cloud.stream.default-binder=mykafka

spring.cloud.stream.function.definition=selffun1;selffun2;selffun3;selffun4;selffun5

spring.cloud.stream.bindings.selffun1-out-0.destination=selfexchange1
spring.cloud.stream.bindings.selffun2-out-0.destination=selfexchange2
spring.cloud.stream.bindings.selffun3-in-0.destination=selfexchange1
spring.cloud.stream.bindings.selffun3-in-1.destination=selfexchange2
spring.cloud.stream.bindings.selffun3-out-0.destination=selfexchange3
spring.cloud.stream.bindings.selffun4-in-0.destination=selfexchange3
spring.cloud.stream.bindings.selffun4-out-0.destination=selfexchange4
spring.cloud.stream.bindings.selffun5-in-0.destination=selfexchange4









#spring.cloud.stream.function.definition=handleflowstep02;handleflowstep03;handleflowstep04;gather
#如果不填写binder的话 默认链接上述默认MQ链接

#spring.cloud.stream.bindings.handleflowstep01.destination=myhandleexchange1
#spring.cloud.stream.bindings.handleflowstep02-in-0.destination=myhandleexchange1
#spring.cloud.stream.bindings.handleflowstep02-out-0.destination=myhandleexchange2
#spring.cloud.stream.bindings.handleflowstep03-in-0.destination=myhandleexchange2
#spring.cloud.stream.bindings.handleflowstep03-out-0.destination=myhandleexchange3
#spring.cloud.stream.bindings.handleflowstep04-in-0.destination=myhandleexchange3

#spring.cloud.stream.bindings.gather1.destination=gatherinput1
#spring.cloud.stream.bindings.gather2.destination=gatherinput2
#spring.cloud.stream.bindings.gather-in-0.destination=gatherinput1
#spring.cloud.stream.bindings.gather-in-1.destination=gatherinput2
#spring.cloud.stream.bindings.gather-out-0.destination=myhandleexchange1






